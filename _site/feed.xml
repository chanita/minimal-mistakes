<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Airmee.Me</title>
<subtitle type="text">Airmee, Chanita Anuwong</subtitle>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://airmee.me/feed.xml" />
<link rel="alternate" type="text/html" href="http://airmee.me" />
<updated>2014-04-24T09:19:56+07:00</updated>
<id>http://airmee.me/</id>
<author>
  <name>Chanita Anuwong</name>
  <uri>http://airmee.me/</uri>
  <email>aireanalistic@gmail.com</email>
</author>


<entry>
  <title type="html"><![CDATA[ซีรีส์ ทำBlog ยุคใหม่ ใช้ Static Blog (Static CMS) ตอนที่ 1]]></title>
  <link rel="alternate" type="text/html" href="http://airmee.me/cms-2-static-cms/" />
  <id>http://airmee.me/cms-2-static-cms</id>
  <published>2014-04-21T00:00:00+07:00</published>
  <updated>2014-04-21T00:00:00+07:00</updated>
  <author>
    <name>Chanita Anuwong</name>
    <uri>http://airmee.me</uri>
    <email>aireanalistic@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;นี่เป็นภาคต่อจาก &lt;em&gt;&lt;a href=&quot;http://airmee.me/cms-1/&quot;&gt;เกริ่นเรื่อง CMS สำหรับ ซีรีส์ ทำBlog ยุคใหม่ ใช้ Static Blog (Static CMS)&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;ในเนื้อหา ตอนที่ 1 ขอเตือนก่อนว่า&lt;/p&gt;

&lt;p&gt;ถ้าหล่อนเป็นมนุษย์ ลาก…วาง&lt;br /&gt;
อ๊ะ จิ้มสี&lt;br /&gt;
อ๊ะ Browse รูป&lt;br /&gt;
อ๊ะ Drop your file เฮีย..&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Static CMS แบบบ้านๆ อาจไม่ตอบโจทย์&lt;/p&gt;

&lt;p&gt;เพราะงั้นขอให้ แบ่ง Static CMS เป็นพุงสามชั้น&lt;/p&gt;

&lt;p&gt;ชั้นแรก รองรับแค่การเขียนบล็อก ใส่เนื้อหาสัพเพเหระที่เกี่ยวข้องได้ แต่หน้าตา ตามอัถภาพ&lt;/p&gt;

&lt;p&gt;ชั้นที่สอง รองรับหน้าตางามงด เพราะถ้าบล็อกเราเนื้อหาไม่ดีจริง เราต้องไปพึ่งการศัลยกรรมแบบสวยตั้งแต่หัว (ที่)ยันฮี …​(ขอบคุณชาว OlX สำหรับมุกนี้… อิอิ เดี๋ยวไปขออนุญาติแท็กก่อน (เค้าจะอยากให้แท็กป่าววะ?)) เพื่อที่จะไม่อายใคร เดี๋ยวเค้าจะว่า เนื้อหาไร้ซึ่งแล้วยังไม่น่าเยี่ยมชม อาจต้องจ้างเพื่อนห้าบาทให้เข้ามากระตุ้นทราฟฟิก&lt;/p&gt;

&lt;p&gt;ชั้นที่สาม Static CMS อันลงปลั๊กอินสุดเริ่ดส์ ช่วยให้คนเขียนบล็อกสะดวกสบาย มีอารยะ&lt;br /&gt;
ณ จุดนี้ มนุษย์ลาก…วาง หรือ มนุษย์ Drop your file เฮีย อาจจะ พึงพอใจขึ้นมานิดส์นุง&lt;/p&gt;

&lt;p&gt;มีชั้นที่สี่ด้วย เพราะที่เราสร้างตึกแถวบ้านอาม่าเราเหลือโครงเหล็กเอาไว้.. ก็เลยต่อชั้นเพิ่มได้….&lt;/p&gt;

&lt;p&gt;ชั้นที่สี่ คือ ลง widget ต่างๆ ไม่ให้น้อยหน้า Blog รุ่นพี่เก๋าๆ&lt;/p&gt;

&lt;p&gt;ตอนที่ 1 ขอจบแค่นี้ได้ไหม …. คือ…เขียนมันเพื่อเจ้…… เจ้เค้าสั่งมา….&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://airmee.me/cms-2-static-cms/&quot;&gt;ซีรีส์ ทำBlog ยุคใหม่ ใช้ Static Blog (Static CMS) ตอนที่ 1&lt;/a&gt; was originally published by Chanita Anuwong at &lt;a href=&quot;http://airmee.me&quot;&gt;Airmee.Me&lt;/a&gt; on April 21, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[เกริ่นเรื่อง CMS สำหรับ ซีรีส์ ทำBlog ยุคใหม่ ใช้ Static Blog (Static CMS)]]></title>
  <link rel="alternate" type="text/html" href="http://airmee.me/cms-1/" />
  <id>http://airmee.me/cms-1</id>
  <published>2014-04-21T00:00:00+07:00</published>
  <updated>2014-04-21T00:00:00+07:00</updated>
  <author>
    <name>Chanita Anuwong</name>
    <uri>http://airmee.me</uri>
    <email>aireanalistic@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;เห็นเพื่อนๆ หลายคนคมความคิด แต่ปล่อยมันหายไป ก็เลยอยากชวนให้เขียน Blog กันค่ะ&lt;/p&gt;

&lt;p&gt;เนื่องจากใครๆ ก็มี Blog เป็นของตัวเอง แต่รู้ไหมว่า พอตัดสินใจจะมี Blog แล้วเราต้องเลี้ยงดูมันอย่างไรบ้าง …&lt;/p&gt;

&lt;p&gt;พอพูดถึง Blog ท่านคงจะนึกถึงBlog แบบเก่าแก่แต่เก๋า อย่าง Wordpress ที่ครองใจมนุษยชาติด้วย
flexibility สูง
plugins มากมาย
และ template กับ theme กองเท่าภูเขาเลากา
Hosting ก็เยอะแยะ (อยากโฆษณาแฝงจังเลย อิอิ)&lt;/p&gt;

&lt;p&gt;ค่ายอื่นอย่าง Drupal หรือ Blogger ก็มีมุนษย์ไทยใช้เยอะเหมือนกันนะ&lt;/p&gt;

&lt;p&gt;พวกนี้แหละคือ CMS ( Content Management System ) แปลเป้นภาษามารดาตามพจนานุกรมแมวใบไม้ ครองโลกว่า ระบบช่วยจัดการเนื้อหา บทความและสัพเพเหระที่เกี่ยวข้อง&lt;/p&gt;

&lt;p&gt;ขอนำ Wordpress มาเป็นกรณีตัวอย่างเพราะมันเป็นยี่ห้อนึงที่บันทึกข้อมูลเหล่านี้ลงบน Database&lt;br /&gt;
และมีโค้ดที่สร้างมารองรับให้ต่อยอดได้&lt;br /&gt;
สามารถลง Pluginได้&lt;br /&gt;
ลง theme ได้&lt;br /&gt;
ลง widget ได้&lt;br /&gt;
บลา บลา บลา&lt;br /&gt;
และถ้าไม่ชอบใจของที่มีอยู่แล้วก็สามารถสร้างของเหล่านี้ขึ้นมาตามใจชอบ&lt;/p&gt;

&lt;p&gt;คนไทยเราก็สามารถทำเงินค่าขนมจาก Wordpress theme ไปหลายล้านนะ (“ห๊ะ ค่าขนมกี่บาทนะ?”)&lt;/p&gt;

&lt;p&gt;ถ้าอย่างนั้นแล้ว ทำไมเราต้องหันมาสนใจ Static CMS ด้วยง่ะ!&lt;/p&gt;

&lt;p&gt;CMS แบบเดิมนั้นมีข้อเสียที่น่ารบกวนจิตใจอยู่น๊าา&lt;/p&gt;

&lt;p&gt;อย่างแรกคือ มันช้าอ่ะ ฟีเจอร์มันเยอะแยะ กว่าจะโหลดได้แต่ละหน้าแทบขาดใจ &lt;br /&gt;
แม้กระทั่งเวบที่โฮสต์ในประเทศไทย และคนเข้าเวบก็อยู่ในประเทศไทยนะ!!!&lt;br /&gt;
(ประสิทธิภาพของเซิร์ฟเวอร์ก็เป็นปัจจัยนึงนะ แต่กับบล็อกเนี่ย จะต้องใช้เครื่องแรงแค่ไหนเชียว)&lt;/p&gt;

&lt;p&gt;เวลาที่หล่อน configureมันผิดนิดนึง ก็น่าปวดใจนะ บทมันจะพัง มันก็พังยาวไป….&lt;/p&gt;

&lt;p&gt;กรณีที่เราใช้ theme ที่คนอื่นทำมาใช้งาน บางทีมันมีข้อจำกัด เปลี่ยนโน่นนี่ไม่ได้&lt;/p&gt;

&lt;p&gt;ในรายละเอียดลึกๆ แล้วยังมีความเสี่ยงเรื่องโดนแฮ็กเกอร์โจมตีด้วย ซึงเราจะยังไม่พูดถึง เพราะว่ามันเป็นส่วนน้อยมาคร่ะช์&lt;/p&gt;

&lt;p&gt;(ถ้าบล็อกเราดังถึงขั้นมีแฮ็กเกอร์จะมาโจมตีค่อยว่ากันโนะ…)&lt;/p&gt;

&lt;p&gt;และแล้ว…..&lt;/p&gt;

&lt;p&gt;มนุษยชาติ ก็ขอเปลี่ยนวิถี จากสูงสุด คืนสู่สามัญ….&lt;/p&gt;

&lt;p&gt;เบื้องบนก็เลยประทาน Static CMS ลงมาเป็นพระเอกของเราส์&lt;/p&gt;

&lt;p&gt;ตัดจบตรงนี้เลย รออ่านภาคสองนะครัช&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://airmee.me/cms-1/&quot;&gt;เกริ่นเรื่อง CMS สำหรับ ซีรีส์ ทำBlog ยุคใหม่ ใช้ Static Blog (Static CMS)&lt;/a&gt; was originally published by Chanita Anuwong at &lt;a href=&quot;http://airmee.me&quot;&gt;Airmee.Me&lt;/a&gt; on April 21, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Product Backlog]]></title>
  <link rel="alternate" type="text/html" href="http://airmee.me/product-backlog/" />
  <id>http://airmee.me/product-backlog</id>
  <published>2014-04-17T00:00:00+07:00</published>
  <updated>2014-04-17T00:00:00+07:00</updated>
  <author>
    <name>Chanita Anuwong</name>
    <uri>http://airmee.me</uri>
    <email>aireanalistic@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;มันคือคลังในการเก็บรายละเอียดของชิ้นงานเราว่ามันควรออกมาเป็นยังไง&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;อ้า… มันคือ TOR (Term Of Reference) หรอ? &lt;br /&gt;
RFP(Request For Proposal) หรอ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;เอ่อ…​ยังไม่ค่อยถูกเนาะ…&lt;/p&gt;

&lt;p&gt;มันต่างกันหลายอย่างอยู่นา&lt;/p&gt;

&lt;p&gt;TOR หรือ RFP มีเสน่ห์อยู่อย่างนึงคือ ไม่มีใครอยากจะอ่านมัน ไอ้ที่เล่มหนาๆ ใช้ภาษาน่าเบื่อนิดๆ แล้วพูดอะไรยาวๆ แบบที่ต้องอ่านให้หมดเล่มถึงจะได้น้ำ ได้เนื้อครบ
แค่หยิบมาก็ตั้งท่าจะหลับละ ฮา…   &lt;/p&gt;

&lt;p&gt;เค้าแซวเล่นน๊าาา….&lt;/p&gt;

&lt;p&gt;ขยายความแบบมีสาระ ก็คือว่า จุดมุ่งหมายในการเขียน &lt;nobr&gt;Product Backlog&lt;/nobr&gt; มันจะต่างออกไป&lt;/p&gt;

&lt;nobr&gt;Product Backlog&lt;/nobr&gt;
&lt;p&gt;เขียนมาเพื่อให้อ่าน (ไม่ได้เขียนเพื่อใช้เก็บเงิน หรือเขียนเพราะเค้าบอกว่าต้องเขียน) อาจจะฟังดูเลื่อนลอย และไม่เห็นภาพ&lt;/p&gt;

&lt;p&gt;ถ้าเช่นนั้นขออธิบายสรรพคุณของ &lt;nobr&gt;Product Backlog&lt;/nobr&gt; สักหน่อย ก่อนจะเชิญชวนให้นิยมชมชอบมันนะคระ&lt;/p&gt;

&lt;nobr&gt;Product Backlog&lt;/nobr&gt;
&lt;p&gt;จะประกอบไปด้วย รายละเอียดงานที่โดนซอยออกเป็นชิ้นๆ&lt;/p&gt;

&lt;p&gt;แต่ละชิ้นๆ มีขอบเขต และเนื้อหาไม่เท่ากัน จะใหญ่หรือจะเล็กขึ้นอยู่กับปัจจัยต่างๆ เช่นว่า เป็นชิ้นงานที่ซับซ้อนไหม ซับไซ้หมอน
หรือเป็นงานที่กำลังจะเริ่มทำเร็วๆนี้ หรือเป็นงานที่กว่าจะเริ่มทำก็ปีหน้าโน้นนนน&lt;/p&gt;

&lt;p&gt;แต่ละชิ้น เราก็เลยเรียกมันว่า &lt;nobr&gt;Product Backlog Item&lt;/nobr&gt; ชาวบ้านเค้าเรียกย่อว่า PBI (ไม่ได้เป็นญาติทางใดกับ FBI นะคะ)&lt;/p&gt;

&lt;p&gt;Software makers เค้าจะมาอ่าน &lt;nobr&gt;Product Backlog Item&lt;/nobr&gt; ตอนที่เค้าจะเริ่มลงมือทำชิ้นงานนั้น&lt;/p&gt;

&lt;p&gt;มี sub title ให้นิดส์นุง Software makers หมายถึง ช่างทำซอฟต์แวร์ เพราะงั้นรวมหมดเลย ตั้งแต่ developers, 
SA, testers, infraฯ, Dev อึ๊ป เอ้ย Dev-op และอื่นๆ ตามแต่จินตนาการของบริษัทใครบริษัทมัน&lt;/p&gt;

&lt;nobr&gt;Product Backlog Item focus อยู่ที่ delivery &lt;/nobr&gt;
&lt;p&gt;มันถูกหั่นให้มีขนาดที่จะไม่ใช้เวลานานเกินไปในการนำออกสู่ตลาดไปใช้งาน (หรือแม้แต่ทำเงิน)&lt;/p&gt;

&lt;nobr&gt;Product Backlog Item มันไม่นอกเรื่อง มันไม่ลามปามไปพูดถึง&lt;/nobr&gt;
&lt;p&gt;spec ของหัวข้ออื่น เพราะงั้นไม่ค่อยมีนะที่ช่างทำซอฟต์แวร์เราจะเลยเถิดไปทำฟีเจอร์ใกล้เคียง
(ซึ่งถ้าเลยเถิดกันบ่อยๆ อาจเป็นผลให้งานไม่เสร็จสักก้อน ไม่มีอะไรออกสูตลาดเลย เจ๊งสิครับ)&lt;/p&gt;

&lt;nobr&gt;Product Backlog Item มันตั้งอยู่บนแนวคิดเรื่อง &lt;/nobr&gt;
&lt;nobr&gt;Emergent Design&lt;/nobr&gt;
&lt;p&gt;(หนิ่ อย่ามาแปลว่า ดีไซน์แบบเร่งด่วนนะยะ!!!) &lt;/p&gt;
&lt;nobr&gt;Emergent Design ว่าด้วยเรื่อง &lt;/nobr&gt;
&lt;p&gt;“อย่าดีไซน์ซะเวิ่นเว้อ ว่อกแว่ก ดีไซน์แค่เพียงพอให้นำไปใช้ได้ แล้วค่อยปรับจูนตามที่คนที่นำไปใช้เห็นว่าสมควรและดีกว่า”
(สงสัยได้เขียนบล็อกเพิ่มเติม เรื่อง &lt;nobr&gt;Emergent Design&lt;/nobr&gt; แฮะ)&lt;/p&gt;

&lt;p&gt;เพราะเช่นนั้นแล้วจะเห็นว่า &lt;nobr&gt;Product Backlog&lt;/nobr&gt; ไม่ทำให้เกิดการประชุมยืดเยื้อ ดูดพลังวิญญาณกันตายไปข้างนึง
ไม่มีให้เห็นหรอกนะ ที่ว่าบางคนตั้งแต่เข้ามาทำงาน จนลาออกไปยังไม่ทันได้เขียนซอฟต์แวร์สักตัว ก็เจ้ากรรมเล่นประชุมๆๆ ดีไซน์ๆๆๆๆ ไดอะแกรมๆๆๆๆ
จนช่างทำซอฟต์แวร์เรารู้สึกวว่าจะเฉาตาย ขอลาออกไปอยู่ที่อื่นดีกว่า…. แถมดีไม่ดี โปรเจ็คนั้นล่มไปก่อนที่จะเริ่มเป็นชิ้นเป็นอัน ก็ไม่ได้ลงมือสักที &lt;/p&gt;

&lt;p&gt;ดังนั้นเจ้า &lt;nobr&gt;Product Backlog Item เนี่ย พอมันมี scope ชัดเจนแล้ว &lt;/nobr&gt;มันยังบรรจุเป้าไว้ชัดเจนว่า งานชิ้นย่อยๆ นี้จะเสร็จก็เมื่อทำสิ่งเหล่านี้ได้ (แล้วก็มีเป็นลิสต์มาเลย)
เรียกลิสต์เน้ ว่า Criteria หรือ Specification เพราะงั้นเป็นการตั้งเป้าก่อนไปเริ่มลงมือทำนะฮะ&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;แล้วมันดีเหรอ?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ดีเซ่ะ เพราะเอาไปต่อกับ ATDD ได้แน่ะ (Acceptance Test Driven Development) เท่สัส&lt;/p&gt;

&lt;p&gt;นั่นทำให้เห็นว่า พอ &lt;nobr&gt;Product Backlog Item&lt;/nobr&gt; แต่ละชิ้น หั่นมาให้สามารถปล่อยออกสู่ตลาดได้เป็นชิ้นๆ มันทำให้ชิ้นงานย่อยแต่ละอัน 
สามารถออกเดินทางไปเก็บ feedback จากผู้ใช้ได้เลย &lt;/p&gt;

&lt;p&gt;Feedback Loop ที่สั้นๆ หมายถึง ทำงานชิ้นไหนออกมาแล้วก็สามารถเก็บฟีดแบ็ก แล้วนำไปปรับจูนจนเหมาะว่าใช้ได้ โอเค เก๋กู้ด
เหมือนกันการจูนเครื่องรถแข่ง ถ้าจูนเสร็จ ไม่ลองเอาไปวิ่งว่าเครื่องมันนิ่งไหม สำลักไหม สะดุดตรงไหนอ๊ะป่าว จะได้รถแข่งเทพๆที่นำพาชัยชนะมาได้ยังไงอ่ะ&lt;/p&gt;

&lt;p&gt;ซอฟต์แวร์ก็เหมือนกัน ต้องมี feedback loop เร็วๆ &lt;/p&gt;

&lt;p&gt;คงเคยเห็นกันมาบ้างเนาะ ที่ทำซอฟต์แวร์มานานหลายเดือน สุดท้ายพอเอาไปให้เค้าเล่น เค้าบอกอย่างงี้ใช้ยาก ไม่เอา ขอเปลี่ยน
(แทบจะจับหัวเค้าไปโขกเสา นี่แน่ะ นี่แน่ะ) (เพราะเราอุตส่าห์ทำแทบตายนะเฟ้ย)  feedback loop สั้นๆ ช่วยแก้ปัญหานี้ได้&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;ถ้าจะมีอะไรที่สั้นๆ แล้วดี ก็ feedback loop นี่แหละค่ะ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;– แอร์หมีกล่าว&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://airmee.me/product-backlog/&quot;&gt;Product Backlog&lt;/a&gt; was originally published by Chanita Anuwong at &lt;a href=&quot;http://airmee.me&quot;&gt;Airmee.Me&lt;/a&gt; on April 17, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[เสพติด]]></title>
  <link rel="alternate" type="text/html" href="http://airmee.me/addiction/" />
  <id>http://airmee.me/addiction</id>
  <published>2014-04-13T00:00:00+07:00</published>
  <updated>2014-04-13T00:00:00+07:00</updated>
  <author>
    <name>Chanita Anuwong</name>
    <uri>http://airmee.me</uri>
    <email>aireanalistic@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;เห็นเค้าว่ากันว่า&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“เลิกเป็นโปรแกรมเมอร์เหอะ ไปทำอย่างอื่นดีกว่า
เงินเยอะกว่า แล้วก็ไม่เครียดด้วย”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;“I’m a programmer, I have no life.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ฝรั่งก็มีประโยคเด็ด แบบนี้เหมือนกัน ไม่ใช่เฉพาะชาวโปรแกรมเมอร์ไทยเรา&lt;/p&gt;

&lt;p&gt;บางคนบอกว่า “ข้าไม่มีทางเลือก ไม่รู้จะไปทำอะไร”&lt;/p&gt;

&lt;p&gt;บางคนลองมองหาลู่ทาง ..&lt;br /&gt;
ขายเสื้อที่เจเจ( ร้อน )  ขายตรง( พูดไม่เป็น )( รู้สึกไม่ใช่ตัวตน )&lt;br /&gt; เป็นเกมเมอร์อาชีพ( เล่นเกมห่วย )  ออกไปเป็นฟรีแลนซ์( น่ากลัวจังเบย )&lt;br /&gt; etc.&lt;/p&gt;

&lt;p&gt;อย่าพึ่งท้อแท้ คนที่สามารถอัปเปหิ ตัวเองออกจากวิถีโคจรแห่งจักรวาลซอฟต์แวร์ได้ มีเยอะแยะไป (และก็มีคนหลุดเข้ามา)&lt;/p&gt;

&lt;p&gt;คนที่เขียนโค้ด เขียนโปรแกรมอยู่เรื่อยๆ ไม่ว่าจะทำระบบอะไรมา หรือเขียน dynamic typing หรือ static typing ก็ล้วนต้องคิดเป็นระบบ และเข้าใจอะไรยากๆเป็นอย่างดี ไม่ใช่แค่เขียนโค้ดนะครัช เขียน เทส หรือเก็บ requirement ก็ต้องคิดเป็นระบบ แล้วมีความสามารถตีโจทย์ที่ซับซ้อนเหมือนกัน การตีโจทย์ให้แตก และนำไป implement&lt;/p&gt;

&lt;p&gt;มันทำให้คนที่อยู่ในวงการนี้ ได้อยู่กับความซับซ้อนของระบบ ต้องมีความเข้าใจในระบบต่างๆที่ร้อยเรียงกันจนกลายเป็นระบบใหญ่ รองรับการใช้งานของชาวบ้านชาวช่อง แม้บางคนจะทำงานกับ Module หรือ component เล็กๆ แต่ชิ้นส่วนเล็กๆเหล่านี้ก็มีโจทย์ มีความยากของมัน ทุกส่วนของการทำซอฟต์แวร์ต้องอาศัยพื้นฐานความเข้าใจสิ่งที่ซับซ้อนมาก่อนเสมอ&lt;/p&gt;

&lt;p&gt;พอคนกลุ่มนี้ ออกไปนอกวงโคจรของโจทย์อันซับซ้อน โดยเปลี่ยนไปทำงานอย่างอื่น เช่น ขายเสื้อบ้าง ทำร้านอาหารบ้าง ฯลฯ มันก็ได้ไปเจอความท้าทายแบบอื่นซึ่งก็ไม่ใช่ความท้าทายในการแก้โจทย์สลับซับซ้อน ซ่อนเงื่อน เพื่อนทรยศ เหมือนกับการเขียนโค้ด&lt;/p&gt;

&lt;p&gt;ทีนี้แหละ อาการมันเริ่มออก&lt;/p&gt;

&lt;p&gt;อาการที่มันเสพติด… เสพติดการแก้โจทย์ซับซ้อนๆ
สมองที่เคยได้โจทย์ ต้องคิด ต้องกลั่นกรอง ต้องแก้โจทย์ที่มีเงื่อนพันกัน พัลวันพัลตู
พอไม่ได้โจทย์แบบนี้อีก สมองมันก็หิว&lt;/p&gt;

&lt;p&gt;ไอ้คนมันก็กระวนกระวาย หาโจทย์ซับซ้อนแบบนี้&lt;/p&gt;

&lt;p&gt;(บางทีก็แค่ไม่รู้ตัว เพราะเหนื่อยจากงานที่ไม่คุ้น ไม่มีเวลาสำรวจตัวเอง)&lt;/p&gt;

&lt;p&gt;ไอ้โจทย์แบบนี้มันก็ไม่ได้หาได้ง่ายจากวงการอื่นซะด้วย วงการซอฟต์แวร์เป็นวงการที่การเปลี่ยนแปลงสูงและความซับซ้อนสูง ระดับขี่เสือมือเปล่านะ มันจะไปหาโจทย์แบบนี้ได้อีกที่ไหน!!! คดีฆาตรกรรมอำพรางยังไม่ซับซ้อนเท่านี้เลยเฟร้ย (เดี่ยวข้าเขียนอธิบายเรื่องขี่เสือมือเปล่าเพิ่มเติมทีหลังนะ)&lt;/p&gt;

&lt;p&gt;สุดท้ายก็มักจะซมซานกลับมาอยู่วงการ Software
อาจจะหนีไปอยู่ตำแหน่งหรือระยะใกล้เคียง เช่น หันมาทำ บริษัทของตัวเอง ทำ consult แต่ก็ต้องอยู่กับโจทย์แถวๆนี้ ซับซ้อน ขี่เสือ แบบเน้!!!!
เพราะจะว่าไป หลายคนเลย เอาจริงๆถ้าเค้าคิดจะทำเงิน หารายได้เป็นกอบเป็นกำ เค้าไปดำเนินธุรกิจบ้าบออะไรก็ได้ เงินง่ายกว่านี้เยอะ&lt;/p&gt;

&lt;p&gt;ถ้าใครรู้สึกว่า เออ ใช่ รู้สึกว่าเสพติดโจทย์ยาก เสพติดการเขียนโค้ด&lt;br /&gt;
แต่ก็รู้สึก ทรมาณกับวิถีชีวิต “I’m programmer, I have no life” แล้วล่ะก็ ขอให้ลองพิจารณาสิ่งที่เรียกว่า&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Sustainable Pace&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;หรือขอแปลเป็นไทยว่า&lt;/p&gt;

&lt;p&gt;&lt;em&gt;การก้าวเดินบทเพลงแห่งชีวิตอย่างยั่งยืนเพื่อเก่งขึ้นและมีความสุขสุดๆ&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;(ถึงจะแปลได้น้ำเน่าแต่ก็เห็นเงาจันทร์นะจ๊ะ) สำหรับคำอธิบายนั้น Sustainable Pace ขอติดไว้ก่อน จะมาอธิบายแน่นอน&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://airmee.me/addiction/&quot;&gt;เสพติด&lt;/a&gt; was originally published by Chanita Anuwong at &lt;a href=&quot;http://airmee.me&quot;&gt;Airmee.Me&lt;/a&gt; on April 13, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Product Discovery and Delivery]]></title>
  <link rel="alternate" type="text/html" href="http://airmee.me/product-discovery-delivery/" />
  <id>http://airmee.me/product-discovery-delivery</id>
  <published>2014-03-10T00:00:00+07:00</published>
  <updated>2014-03-10T00:00:00+07:00</updated>
  <author>
    <name>Chanita Anuwong</name>
    <uri>http://airmee.me</uri>
    <email>aireanalistic@gmail.com</email>
  </author>
  <content type="html">&lt;hr /&gt;

&lt;p&gt;&lt;em&gt;มันคือ&lt;/em&gt;แนวคิดและเครื่องมือที่ช่วยในการตัดสินใจในการทำ Product/Project
ขั้นตอนในการคิดค้น product และการปรับแผน
การทำงานร่วมกันระหว่าง business team, marketing team กับ ทีมทำงาน (delivery team)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;การทำ Software Development มีสถิติสูงมากที่ส่งมอบงาน แล้วกลายเป็นว่าลูกค้านำไปใช้ไม่ได้ หรือใช้ได้แต่ตัดสินใจไม่ใช้&lt;/p&gt;

&lt;p&gt;หรือใช้แล้วทำให้ชีวิตยากกว่าเดิมก็ไม่ใช้ (แม้จะจ่ายเงินซื้อมา หรือจ่ายเงินจ้างทีมทำ) &lt;/p&gt;

&lt;p&gt;สำหรับ development team ใดๆ ถึงแม้จะได้ค่าจ้างในการทำงานไม่ว่าลูกค้าจะใช้โปรดักที่เราทำหรือไม่ก็ตาม แต่ถ้าลูกค้าเกลียดซอฟต์แวร์ที่เราสร้างมา เราก็เศร้าไม่มากก็น้อยนะครัช ดีไม่ดี เราอาจจะไม่อยากพูดถึงมันเลยด้วยซ้ำ&lt;/p&gt;

&lt;p&gt;แล้วมันไม่เจ็บกว่าเหรอถ้าคุณลองคิดถึงหัวอกของลูกค้า จ่ายเงินไปมากมาย เฝ้ารอ และได้อะไรก็ไม่รู้ ด้วยคำอธิบายอะไรก็ไม่รู้ ไม่แน่ใจว่าที่พูดมา ต้องแปลว่าอะไร จะขอเงินคืนก็ไม่ได้ เสียทั้งเงินและเวลา ที่สำคัญไม่กล้าจะทำ Software  อีกเพราะรู้สึกหวาดๆไปเลย สำหรับ enterprise ใหญ่ๆ เรื่องแบบนี้อาจจะไม่เป็นปัญหา เพราะว่ามีเงินมากมายให้ถลุงไม่หมดไม่สิ้น แต่ถ้าเป็น Startup ล่ะก็ พลาดทีนึงถึงก็ล้มไปเลยทีเดียว&lt;/p&gt;

&lt;p&gt;อ้าว พอมาถึงตรงนี้หลายคนก็มีคำถาม ถ้าเรามีเงินก้อนนึง แล้วอยากจะทำซอฟต์แวร์อะไรสักอย่าง เราก็ต้องเสี่ยงที่จะไม่ได้อะไรเลยน่ะเหรอ โปรแกรมที่เราอยากจะได้ พอได้มาก็อาจจะใช้ไม่ได้เหรอ? คำตอบก็คงเป็น “ใช่” ถ้าจะตอบกันแบบตรงๆ ไม่มีผลได้ผลเสียกับใคร&lt;/p&gt;

&lt;p&gt;อ้าว แล้วเราก็ไม่ได้เงินคืนด้วยเหรอ? “ไม่ได้สิ”&lt;/p&gt;

&lt;p&gt;แล้วเวลาที่เราเสียไป 3 ปี นี่ล่ะ?  “…..”&lt;/p&gt;

&lt;p&gt;เวลาสำหรับธุรกิจมีค่ามาก ถ้าคุณปล่อยของออกสู่ตลาดยิ่งเร็วเท่าไหร่ยิ่งดี อย่าว่าแต่คุณเป็นเจ้าของไอเดียและเป็นคนแรกเลย ถ้าคู่แข่งของคุณออก campaign อะไรออกมา แล้วคุณทำ campaign ออกมางัดข้อไม่ทันล่ะก็ หึหึหึ… อยากจะให้นึกเอง (สำหรับคนในแวดวงธุรกิจคงนึกออก)&lt;/p&gt;

&lt;p&gt;พออ่านถึงตรงนี้แล้ว ชักไม่อยากทำ product เป็น Software แล้วอ่ะ ไปทำอะไรที่เป็นโปรดักซ์วางบนชั้นโชว์ตามห้างร้านดีกว่า… โอ้ว อย่าพึ่งล้มลิกหรือท้อแท้&lt;/p&gt;

&lt;p&gt;Computer Science เป็นศาสตร์ที่เกิดใหม่อายุน้อยโข เมื่อเทียบกับฟิสิกส์ เคมี และคณิตศาสตร์ (เกือบลืมชีววิทยา) อะไรที่อายุยังน้อย แปลว่ายังไม่ค่อยรู้ผิดถูก ยังขาดประสบการณ์ และที่สำคัญอ่อนไหว&lt;/p&gt;

&lt;p&gt;Software Development เป็นอะไรที่เรายังถกกันอยู่ว่ามันเป็นศาสตร์หรือศิลป์กันแน่ ทำไมต้องถกกันด้วยล่ะ มันไม่ได้ชัดอยู่แล้วเหรอว่ามันเป็นวิทยาศาสตร์ 
บอกเลยว่าไม่หรอก.. ลองมาดูกันใน Product Discovery and Delivery &lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://airmee.me/product-discovery-delivery/&quot;&gt;Product Discovery and Delivery&lt;/a&gt; was originally published by Chanita Anuwong at &lt;a href=&quot;http://airmee.me&quot;&gt;Airmee.Me&lt;/a&gt; on March 10, 2014.&lt;/p&gt;</content>
</entry>

</feed>
